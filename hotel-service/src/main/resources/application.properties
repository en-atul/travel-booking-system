# Server Configuration
server.port=8084

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/hotel_service_db
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Eureka Client Configuration
spring.application.name=hotel-service
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Spring Cloud Stream Configuration
spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.kafka.binder.required-acks=1
spring.cloud.stream.kafka.binder.replication-factor=1

# Function Bindings
spring.cloud.function.definition=hotelEventHandler
spring.cloud.stream.bindings.hotelEventHandler-in-0.destination=hotel-reservation
spring.cloud.stream.bindings.hotelEventHandler-out-0.destination=hotel-reserved

# Event Topics (Publishers)
spring.cloud.stream.bindings.hotel-reserved-out.destination=hotel-reserved
spring.cloud.stream.bindings.hotel-reservation-failed-out.destination=hotel-reservation-failed
spring.cloud.stream.bindings.hotel-cancel-out.destination=hotel-cancel

# Event Topics (Consumers)
spring.cloud.stream.bindings.hotel-reservation-in.destination=hotel-reservation
spring.cloud.stream.bindings.hotel-cancel-in.destination=hotel-cancel

# Logging
logging.level.com.proj.hotelservice=DEBUG
logging.level.org.springframework.cloud.stream=DEBUG
