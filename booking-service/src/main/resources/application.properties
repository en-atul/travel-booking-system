# Server Configuration
server.port=8082

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/booking_service_db
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Eureka Client Configuration
spring.application.name=booking-service
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# Spring Cloud Stream Configuration
spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.kafka.binder.required-acks=1
spring.cloud.stream.kafka.binder.replication-factor=1

# Individual Event Handlers (no single function definition needed)

# Event Topics (Publishers)
spring.cloud.stream.bindings.booking-created.destination=booking-created
spring.cloud.stream.bindings.flight-cancel.destination=flight-cancel
spring.cloud.stream.bindings.hotel-cancel.destination=hotel-cancel
spring.cloud.stream.bindings.car-cancel.destination=car-cancel

# Event Topics (Consumers)
spring.cloud.stream.bindings.flight-reserved.destination=flight-reserved
spring.cloud.stream.bindings.flight-reservation-failed.destination=flight-reservation-failed
spring.cloud.stream.bindings.hotel-reserved.destination=hotel-reserved
spring.cloud.stream.bindings.hotel-reservation-failed.destination=hotel-reservation-failed
spring.cloud.stream.bindings.car-reserved.destination=car-reserved
spring.cloud.stream.bindings.car-reservation-failed.destination=car-reservation-failed
spring.cloud.stream.bindings.payment-processed.destination=payment-processed
spring.cloud.stream.bindings.payment-failed.destination=payment-failed
spring.cloud.stream.bindings.booking-completed.destination=booking-completed

# Logging
logging.level.com.proj.bookingservice=DEBUG
logging.level.org.springframework.cloud.stream=DEBUG
